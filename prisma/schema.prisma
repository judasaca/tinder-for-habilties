// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id             Int               @id @default(autoincrement())
  contract       Contract          @relation(fields: [contractID], references: [id])
  contractID     Int
  employeeAprove Boolean           @default(false)
  bossAprove     Boolean           @default(false)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  status         TransactionStatus @default(WAITING)
}

enum TransactionStatus {
  WAITING
  ACCEPTED
  REJECTED
}

model Contract {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  boss         User          @relation(fields: [bossId], references: [id], name: "recruiter")
  bossId       Int
  employee     User          @relation(fields: [employeeId], references: [id], name: "hired")
  employeeId   Int
  status       ContractState @default(CREATED)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  hourlyRate   Float
  workHours    Int
  details      String
  transactions Transaction[]
  calification Calification?
}

enum ContractState {
  CREATED
  ACCEPTED
  REJECTED
  FINISHED
  CANCELED
}

model Hability {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  hability String
}

model User {
  id                 Int            @id @default(autoincrement())
  username           String         @unique
  password           String
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  habilities         Hability[]
  recruiterContracts Contract[]     @relation(name: "recruiter")
  hiredContracts     Contract[]     @relation(name: "hired")
  califications      Calification[]
}

model Calification {
  id             Int      @id @default(autoincrement())
  califiedUser   User     @relation(fields: [califiedUserId], references: [id])
  califiedUserId Int
  contract       Contract @relation(fields: [contractId], references: [id])
  contractId     Int      @unique
  description    String?
  calification   Float
}
